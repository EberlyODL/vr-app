# The following types define the data model of the example service
# based on which the GraphQL API is generated

type User @model {
  id: ID! @isUnique
  name: String
  dateOfBirth: DateTime

  # Uncomment below - you can declare relations between models like this

  # posts: [Scene!]! @relation(name: "UserScenes")
}


# Uncomment the model below as well

type Scene @model {
  id: ID! @isUnique
  title: String!
  body: String!
  image: String
  objects: [Object!]! @relation(name: "SceneObjects")

  # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
  # author: User! @relation(name: "UserScenes")
}

type Object @model {
  id: ID! @isUnique
  title: String!
  body: String!
  info: String
  image: String
  scenes: [Scene!]! @relation(name: "SceneObjects")

  # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
  # author: User! @relation(name: "UserScenes")
}

# type MtlFile @model {
#   id: ID! @isUnique
#   title: String!
#   src: String!
# }

# type ObjFile @model {
#   id: ID! @isUnique
#   title: String!
#   src: String!
#   objectsRef: [Object!]! @relation(name: "ObjectObjFile")
# }